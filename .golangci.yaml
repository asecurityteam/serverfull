run:
  deadline: 3m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - .coverage
output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: false
  govet:
    check-shadowing: true
    use-installed-packages: false
  golint:
    min-confidence: 0.8
  dupl:
    threshold: 150
  goconst:
    min-len: 3
    min-occurrences: 3
  depguard:
    list-type: blacklist
    include-go-root: false
    packages:
      - github.com/davecgh/go-spew/spew
  misspell:
    locale: US
  unused:
    check-exported: false
  unparam:
    algo: cha
    check-exported: false
  nakedret:
    max-func-lines: 30
  prealloc:
    simple: true
    range-loops: true
    for-loops: true
linters:
  enable-all: true
  disable:
    - maligned
    - megacheck
    - typecheck
    - interfacer
    - lll
    - gocyclo
    - gochecknoglobals
    - scopelint
issues:
  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked

    # golint: False positive when tests are defined in package 'test'
    - func name will be used as test\.Test.* by other packages, and that stutters; consider calling this

    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)

    # megacheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - ineffective break statement. Did you mean to break out of the outer loop

    # gas: Too many false-positives on 'unsafe' usage
    - Use of unsafe calls should be audited

    # gas: Too many false-positives for parametrized shell calls
    - Subprocess launch(ed with variable|ing should be audited)

    # gas: Duplicated errcheck checks
    - G104

    # gas: Too many issues in popular repos
    - (Expect directory permissions to be 0750 or less|Expect file permissions to be 0600 or less)

    # gas: False positive is triggered by 'src, err := ioutil.ReadFile(filename)'
    - Potential file inclusion via variable

  max-per-linter: 50
  max-same: 3
